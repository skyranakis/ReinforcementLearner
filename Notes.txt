Before 11/26/18
Setup:
	Used Java/Processing because I know it and want to keep the easy stuff easy
	4x4 grid with start in upper left and goal in lower right
	Up, down, left, and right allowed
Started with Simple Learner:
	Stores values for the four that add up to 1 using a Map<String, Double>
	These values constitute probabilities
	Built weighted random number generator in move method
	Stores the moves in memory, a string
	Reward counts the proportion of the moves in memory and makes these the model
		i.e. 50% down, 30% right, 10% up, 10% left becomes 0.5d, 0.3r, 0.1u, 0.1l
		Reward also deletes the memory
	Best this could do is 0.5d, 0.5r, can't guarantee optimal solution every time
	Can't "see"
	Can't memorize path, doesn't know where it is
	Works though, sometimes
	Can diverge away from "correct" answer, annoying
Moved on to SpeedDemon
	Child of SimpleLearner
	Overrides reward method to only update the model if the new time is faster
	Also added the concept of time (numTrials and timeTaken) to the main sketch
	Originally, the time was the reward
	Seems to (not measured in any way) get stuck on good enough paths
Moved on to SpeedDemonWExploration
	Child of SpeedDemon
	Overrides move method to introduce exploration rate of 10%
	Seems to work better
Made RewardAndPunishmentLearner
	New type of agent that has unbounded doubles for the moves, stored in similar map
	Similar move method with weighted random number generation, explores if all 0's
	Reward:
		Treats positive and negative rewards the same
		Divides reward by time
		Adds that quotient to each move for each time that move was used
		Resets memory if the end is reached
		For first time, updates during run
			Could this help it handle corners?
	Implemented -1 reward for hitting walls and 10 reward for reaching goal
		Affects none of the others
		Had to add things to other agents to make sure this had no effect
	Worked really well and really quickly
	Seems to get stuck at pretty good solutions (like 40d, 40r, 5u, 5l)
Made RewardAndPunishmentLearner2
	Child of RewardAndPunishmentLearner2
	Reward overrided
		Works similarly, except multiplies by 1+quotient mentioned above
		Allows exponential growth and collapse of values
	Works well
	Sometimes one of d or r could run away with it
Made new map
	8x8, start in top left, goal in bottom right
	SimpleLearner (SL), RewardAndPunishmentLearner (RnP), RnP2 work well
	SpeedDemon (SD) and SpeedDemonWExploration (SDwE) don't work as well
		Why?
		Quantifiable?
Made a seed for everything random
	To record and repeat interesting examples
Began work on menu
	Did not get far, commented it all out

11/26/28
Created these notes
	Earlier things based on memory and other, scattered notes

12/15/18
Noted:
	Before 11/26/18 probably took about 24 hours, maximum
	11/26/18 probably took about an hour
Rules:
	Can't change anything in this document, only add to it.
	Track time in case this does work out.
Deleted commented menu code to start over
Added a menu to the game
	First, wasn't actually a menu, just a screen that said "Menu" and disappeared
	Made separate drawGame() and gameLoop() systems for what it has been so far
		I know it's not really a "game," but roll with it
	Added a set of booleans to indicate which state we're in
	Added a button on the menu to go to the game
	Added a button on the game to return to the menu
		Made a partial reset function
		Need to add reset options to all agents
	Added textfield to seed
		Involved reworking some of the setup process
		Added checkMenu() and setUpAgent()
	Added scrollable list to choose agent
	Cleaned up agent selection
		Deleted a, agentIndex, seed, rand and made them only in the methods that they need to be
	Agents reset automatically, since a new one is created whenever it goes back to game
Added header with seed and agent
Fixed the start game button
	Previously, it couldn't be clicked unless the scrollbar was up
	Just moved it, now it's fixed
3.5 hours

12/18/18
Added to and rearranged Planned Improvements
	Roughly in order now

12/20/18
RewardAndPunishment seed 1 takes a while.
Added GameMap method
	Default is 8x8
	isEnterable(), getReward(), getType(), getSize(), isGoal()
	getStartPosition() and startPosition added
	getSize() changed to return height and width, not the maximum size
Implemented GameMap
	Changed setup()
	Changed drawMap()
	Added drawSquare()
	Changed drawAgent()
		Consider synchronizing squareSize between drawMap() and drawaAgent()
	Changed gameLoop() and handleReachingGoal() and eliminated rewardForGoal()
About 2 hours at this point
	Added new getReward() that accepts an int array, then calls the original getReward() with the first two values
	Started fixing wall code before computer ran out of battery.
Made polymorphisms of all methods in GameMap that previously needed a row and column so that they now just need a position
Changed wall-handling code in gameLoop()
	Seems to work fine
	Doesn't work the same with the same seeds
	Rewarding 0 should never do anything, right?
	Diverges where it hits the wall (obviously)
	It was a result of a dumb thing I did in Exponential Learner, fixed now
		Still different from original
Reading maps from text file
	Got files to open right eventually
	Got reading to work right
	Got writing to work right
About 2 additional hours for 4 total today

1/11/2019
Noted: Exponential Learner with Seed 0 has very LOW numbers in  model
Created LevelEditor
	Got the two buttons on the two screens items to refer to each other
		Had serious issues getting the ControlP5's to play nice
		Should go back and move the gui to LevelEditor class if possible
		Also had serious issues focusing. Took about 3 hours, probably worked half that, if that.
	Had issues with TextFields in LevelEditor
	Adjusted GameMap to prepare to work better with LevelEditor
		Moved drawMap and drawSquare from ReinforcementLearner to GameMap
		Made a new constructor in GameMap that takes width and height, changed default constructor to use that for 10,10
		Made GameMap instance variables private
		Added changeType
	Got height, width, and name bars working properly
	Got saving to work properly
		Tested with 7by14
		Noted that for RaPL, seed 0, 7x14, <r and d> and <u and l> are almost exactly the same until run #9
		Even after 30, u is HIGHER than l
	Added actual box-changing functionality
		Added a RadioButton, but did not implement it (it was 2:30 am)
		Redesigned LevelEditor layout a bit
		Added the mouse support to LevelEditor
		Added getSquareSize() to GameMap
		Moved most mouse support to Reinforcement Learner
		Discovered that RETURNTOMENU now causes crash
		Figured out that the RadioButton needs to be an instance variable in order to remove it properly
		Made 8by8wL and Snek (3:20 am)
		Actually implemented that RadioButton
			Only works on drag, not click
			Issues with Start - you can make the Start Square not "Start" and if the Start moves in a box, it turns itself into "Normal"
			Eventually got it to actually work
Noted: Reinforcement Learner, 7by14, Seed 0: Learns to go straight down, gets stuck in corner for a while, then shoots off to right
	Why does it not keep trying to move down?
	Similar behavior observed for Seed 1 and (eventually) Seed 2
5 more hours since I got it together, for a total of 8 today
And now there's a NullPointerException is tryToChange
	That was because of the mouseReleased and mouseDragged things I did... fixed now
Snek doesn't seem to work well at all, at least not Exponential Learner Seed 1

1/15/19
To be clear, the last notes from the last session only took about 20 minutes, so still count it as 8 hours for that
Implemented list of file names
	Created MapList.txt
	Created nameIsAvailable() in LevelEditor
	Changed actuallySaveMap() in LevelEditor to make it only save when the name is available
	Added message that the name was unavailable when appropriate in drawLevel()
	Added to actuallySaveMap() to write to MapList.txt
	List of file names works, but found a bug where changing Start doesn't properly un-Start the others
Fixed a Bug regarding Start in the level editor
Implemented dropdown list of maps
	Added scrollableList whichMap in turnMenuOn() and removal code in turn MenuOff()
	Added code to update map in checkMenu()
	Changed map instantiated in setup() in ReinforcementLearner back to use the default constructor of GameMap, as it should
Misc.
	Failed to reproduce bug 2
	Noted that Reverse8by8 was wrong, fixed manually
	Set scrollableList to have nothing selected by default (before it was first item by default)
2 hours today
Fixed minor bug
	Noted error in the way the start positions work
	Determined they were saved properly, but not loaded properly
	Actually they were loaded properly; the game just doesn't start on the start space
	I found I hadn't reset the location of the agent when the new map was chosen
	Took about 20 minutes, for a total of 2:20 today